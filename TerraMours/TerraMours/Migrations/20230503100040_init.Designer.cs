// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TerraMours.Framework.Infrastructure.EFCore;

#nullable disable

namespace TerraMours.Migrations
{
    [DbContext(typeof(FrameworkDbContext))]
    [Migration("20230503100040_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenuButtons", b =>
                {
                    b.Property<long>("MenuButtonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MenuButtonId"));

                    b.Property<string>("ButtonEnName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ButtonShowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long>("RolesToMenuId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("MenuButtonId");

                    b.HasIndex("MenuId");

                    b.ToTable("SysMenuButtons", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenus", b =>
                {
                    b.Property<long>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasChildren")
                        .HasColumnType("boolean");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("MenuId");

                    b.ToTable("SysMenus", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRole", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<long?>("DeptId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeptName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasChildren")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("RoleId");

                    b.ToTable("SysRole", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", b =>
                {
                    b.Property<long>("RolesToMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("RolesToMenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("RolesToMenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("SysRolesToMenu", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysUser", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("DeptId")
                        .HasColumnType("text");

                    b.Property<string>("DeptName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableLogin")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ExpireTime")
                        .HasColumnType("boolean");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("HeadImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsRegregisterPhone")
                        .HasColumnType("boolean");

                    b.Property<int>("LoginFailCount")
                        .HasColumnType("integer");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortPhone")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPhoneNum")
                        .HasColumnType("text");

                    b.Property<string>("UserTrueName")
                        .HasColumnType("text");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("UserId");

                    b.ToTable("SysUser", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenuButtons", b =>
                {
                    b.HasOne("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenus", "SysMenus")
                        .WithMany("SysMenuButtons")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", "SysRolesToMenu")
                        .WithMany("SysMenuButtons")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysMenus");

                    b.Navigation("SysRolesToMenu");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", b =>
                {
                    b.HasOne("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRole", "SysRole")
                        .WithMany("RolesToMenus")
                        .HasForeignKey("RoleId");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenus", b =>
                {
                    b.Navigation("SysMenuButtons");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRole", b =>
                {
                    b.Navigation("RolesToMenus");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", b =>
                {
                    b.Navigation("SysMenuButtons");
                });
#pragma warning restore 612, 618
        }
    }
}
