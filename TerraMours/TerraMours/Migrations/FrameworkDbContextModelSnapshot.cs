// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Newtonsoft.Json.Linq;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TerraMours.Framework.Infrastructure.EFCore;

#nullable disable

namespace TerraMours_Gpt.Migrations
{
    [DbContext(typeof(FrameworkDbContext))]
    partial class FrameworkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenuButtons", b =>
                {
                    b.Property<long>("MenuButtonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MenuButtonId"));

                    b.Property<string>("ButtonEnName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ButtonShowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long>("RolesToMenuId")
                        .HasColumnType("bigint");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("MenuButtonId");

                    b.HasIndex("MenuId");

                    b.ToTable("SysMenuButtons", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenus", b =>
                {
                    b.Property<long>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExternalUrl")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasChildren")
                        .HasColumnType("boolean");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsHome")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShow")
                        .HasColumnType("boolean");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("text");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("MenuId");

                    b.ToTable("SysMenus", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRole", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("RoleId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<long?>("DeptId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeptName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasChildren")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("RoleId");

                    b.ToTable("SysRole", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", b =>
                {
                    b.Property<long>("RolesToMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("RolesToMenuId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("RolesToMenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("SysRolesToMenu", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysUser", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<string>("DeptId")
                        .HasColumnType("text");

                    b.Property<string>("DeptName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableLogin")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("HeadImageUrl")
                        .HasColumnType("text");

                    b.Property<int?>("ImageCount")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRegregisterPhone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<int?>("LoginFailCount")
                        .HasColumnType("integer");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<string>("ShortPhone")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPhoneNum")
                        .HasColumnType("text");

                    b.Property<string>("UserTrueName")
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.Property<DateTime?>("VipExpireTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("VipLevel")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("SysUser", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.ChatConversation", b =>
                {
                    b.Property<long>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ConversationId"));

                    b.Property<string>("ConversationName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("ConversationId");

                    b.ToTable("ChatConversation", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.ChatRecord", b =>
                {
                    b.Property<long?>("ConversationId")
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long?>("ConversationId"));

                    b.Property<long>("ChatRecordId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IP")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int?>("ModelType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ConversationId");

                    b.ToTable("ChatRecord", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.CollectRecord", b =>
                {
                    b.Property<long>("CollectRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CollectRecordId"));

                    b.Property<bool?>("Collect")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Forward")
                        .HasColumnType("boolean");

                    b.Property<string>("IP")
                        .HasColumnType("text");

                    b.Property<bool?>("Like")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Prompt")
                        .HasColumnType("text");

                    b.Property<long?>("RecordId")
                        .HasColumnType("bigint");

                    b.Property<int?>("RecordType")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("CollectRecordId");

                    b.ToTable("CollectRecord", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.GptOptionsEntity", b =>
                {
                    b.Property<long>("GptOptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("GptOptionsId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<JObject>("ImagOptions")
                        .HasColumnType("jsonb");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<JObject>("OpenAIOptions")
                        .HasColumnType("jsonb");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("GptOptionsId");

                    b.ToTable("GptOptions", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.ImageRecord", b =>
                {
                    b.Property<long>("ImageRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ImageRecordId"));

                    b.Property<int?>("CollectCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<int?>("ForwardCount")
                        .HasColumnType("integer");

                    b.Property<string>("IP")
                        .HasColumnType("text");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int?>("ModelType")
                        .HasColumnType("integer");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Prompt")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("ImageRecordId");

                    b.ToTable("ImageRecord", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.KeyOptions", b =>
                {
                    b.Property<long>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("KeyId"));

                    b.Property<string>("ApiKey")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("UnUsed")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Used")
                        .HasColumnType("numeric");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("KeyId");

                    b.ToTable("KeyOptions", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.PromptOptions", b =>
                {
                    b.Property<long>("PromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PromptId"));

                    b.Property<string>("Act")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Prompt")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("UsedCount")
                        .HasColumnType("integer");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("PromptId");

                    b.ToTable("PromptOptions", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.Sensitive", b =>
                {
                    b.Property<long>("SensitiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SensitiveId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SensitiveId");

                    b.ToTable("Sensitive", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.Verification", b =>
                {
                    b.Property<long>("VerificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("VerificationId"));

                    b.Property<int?>("CodeType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string[]>("UsedUserIds")
                        .HasColumnType("text[]");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("VerificationId");

                    b.ToTable("Verification", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.SystemModels.SysDictionary", b =>
                {
                    b.Property<long>("DictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DictionaryId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<JObject>("Dictionary")
                        .HasColumnType("jsonb");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("DictionaryId");

                    b.ToTable("SysDictionary", (string)null);
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.SystemModels.SysSettingsEntity", b =>
                {
                    b.Property<long>("SysSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SysSettingsId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreateID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<JObject>("Email")
                        .HasColumnType("jsonb");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<JObject>("Initial")
                        .HasColumnType("jsonb");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin")
                        .HasComputedColumnSql("xmin");

                    b.HasKey("SysSettingsId");

                    b.ToTable("SysSettings", (string)null);
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenuButtons", b =>
                {
                    b.HasOne("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenus", "SysMenus")
                        .WithMany("SysMenuButtons")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", "SysRolesToMenu")
                        .WithMany("SysMenuButtons")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysMenus");

                    b.Navigation("SysRolesToMenu");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", b =>
                {
                    b.HasOne("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRole", "SysRole")
                        .WithMany("RolesToMenus")
                        .HasForeignKey("RoleId");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.ChatRecord", b =>
                {
                    b.HasOne("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.ChatConversation", "ChatConversation")
                        .WithMany("ChatRecords")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatConversation");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysMenus", b =>
                {
                    b.Navigation("SysMenuButtons");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRole", b =>
                {
                    b.Navigation("RolesToMenus");
                });

            modelBuilder.Entity("TerraMours.Framework.Infrastructure.Contracts.SystemModels.SysRolesToMenu", b =>
                {
                    b.Navigation("SysMenuButtons");
                });

            modelBuilder.Entity("TerraMours_Gpt.Framework.Infrastructure.Contracts.GptModels.ChatConversation", b =>
                {
                    b.Navigation("ChatRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
